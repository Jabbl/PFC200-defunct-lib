/**************************************************************************
* Copyright (C) 2018 PowerTech Engineering AS <post@pt-eng.no>
*
* This code may not be distributed, used or sold without explicit
* written permission from PowerTech Engineering AS.
*********************************************************************/

#pragma once

#include "wide/wide_api.h"

#ifdef ERROR
#define __ERROR ERROR
#undef ERROR
#endif

typedef struct
{
	BOOL SUCCESS;
	BOOL PENDING;
	BOOL ERROR;
	BOOL INVALIDID;
	INT ERRORCLASS;
	INT ERRORCODE;
	WORD RETRIESLEFT;
	INT I_PADDING2;
}
BACNETAPI_ACTIONRESULTtyp;

typedef struct
{
	DWORD CRC32_ID;
	DWORD CRC32_PRESENTVALUE;
	DWORD CRC32_PROPERTIES;
	DWORD CRC32_CONFIGURATION;
	DWORD RESERVED1;
	DWORD RESERVED2;
	DWORD RESERVED3;
	BOOL CHANGE_OF_VALUE;
	BOOL IS_DYNAMIC;
	BOOL RESERVED4;
	BOOL RESERVED5;
	BYTE HASHDATA_BYOBJECTID[32];
	BYTE HASHDATA_BYOBJECTNAME[32];
	BYTE OBJECTSPECIFICDATA[48];
}
BACNET_INTERNAL_DATAtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	char DESCRIPTION[256];
	INT NODE_TYPE;
	INT I_RESERVED4;
	BOOL INHIBITDERIVEOBJECTNAMES;
	BOOL I_RESERVED1;
	BOOL I_RESERVED2;
	BOOL I_RESERVED3;
}
BACNET_STRUCT_VIEW_OBJECTtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
}
BACNET_ANY_OBJECTtyp;

typedef struct
{
	BOOL IN_ALARM;
	BOOL FAULT;
	BOOL OVERRIDDEN_STATUSFLAGE;
	BOOL OUT_OF_SERVICE;
}
BACNETSTATUSFLAGStyp;

typedef struct
{
	BOOL SUCCESS;
	BOOL PENDING;
	BOOL ERROR;
	BOOL I_PADDING1;
	BACNETSTATUSFLAGStyp STATUSFLAGS;
	INT VALUES;
	INT ERRORCLASS;
	INT ERRORCODE;
	INT I_PADDING2;
}
BACNETAPI_GETRESULTtyp;

typedef struct
{
	DWORD OBJECT_ID;
	INT OBJECT_TYPE;
	INT PROPERTY;
	DWORD ARRAY_INDEX;
	INT VALUETYPE;
	INT VALUEDIM;
	BYTE *VALUEBUFFER;
	DWORD VALUEBUFFERSIZE;
	BOOL *RESULTDATA;
	BOOL ERROR;
	BOOL SUCCESS;
	BOOL PENDING;
	BOOL I_PADDING1;
	INT ERRORCLASS;
	INT ERRORCODE;
	BACNETSTATUSFLAGStyp STATUSFLAGS;
}
BACNETAPI_GETPROPSBYID_ITEMtyp;

typedef struct
{
	BOOL LASTENABLE;
	DWORD HANDLE;
	BOOL ACTUALENABLE;
	BOOL ENABLE;
	DWORD DEVICEID;
	INT MODE;
	DWORD COVEXPIRY;
	BOOL COVREQUESTCONFIRMED;
	DWORD POLLINTERVAL;
	BACNETAPI_GETPROPSBYID_ITEMtyp *ITEMS_PTR;
	DWORD ITEMS_SIZE;
	BOOL SUCCESS;
	BOOL BUSY;
	BOOL ERROR;
	BOOL I_PADDING1;
	INT ERRORCLASS;
	INT ERRORCODE;
	BACNETSTATUSFLAGStyp STATUSFLAGS;
}
BACNETAPI_GETPROPSBYIDtyp;

typedef struct
{
	BOOL LASTTRIGGER;
	BOOL TRIGGER;
	char* REQUESTXML;
	char* RESPONSEXML;
	DWORD RESPONSEXML_SIZE;
	BOOL READY;
	BOOL ERROR;
}
BACNETAPI_XMLtyp;

typedef struct
{
	WORD YEAR;
	BYTE MONTH;
	BYTE DAY;
	BYTE WEEKDAY;
	BYTE I_PADDING1;
	BYTE I_PADDING2;
	BYTE I_PADDING3;
}
BACNETDATEtyp;

typedef struct
{
	BYTE HOUR;
	BYTE MINUTE;
	BYTE SEC;
	BYTE HUNDRETHS;
}
BACNETTIMEtyp;

typedef struct
{
	BACNETDATEtyp DATEINFO;
	BACNETTIMEtyp TIMEINFO;
}
BACNETDATETIMEtyp;

typedef struct
{
	BOOL ISACKED;
	BOOL I_PADDING1;
	BOOL I_PADDING2;
	BOOL I_PADDING3;
	BACNETDATETIMEtyp TIMESTAMP;
}
BACNETACKEDINFOtyp;

typedef struct
{
	BOOL LOWLIMITENABLE;
	BOOL HIGHLIMITENABLE;
	BOOL I_RESERVED1;
	BOOL I_RESERVED2;
}
BACNETLIMITENABLEtyp;

typedef struct
{
	BOOL TO_OFFNORMAL;
	BOOL TO_FAULT;
	BOOL TO_NORMAL;
	BOOL I_PADDING1;
}
BACNETEVENTTRANSITIONBITStyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	REAL PRIORITY_ARRAY_VAL[16];
	BOOL PRIORITY_ARRAY_EN[16];
	INT RELIABILITY;
	INT EVENT_STATE;
	BACNETACKEDINFOtyp ACKED_TRANSITIONS[3];
	BACNETDATETIMEtyp EVENT_TIME_STAMPS[3];
	REAL HIGH_LIMIT;
	REAL LOW_LIMIT;
	REAL DEADBAND;
	DWORD TIME_DELAY;
	BACNETLIMITENABLEtyp LIMIT_ENABLE;
	BOOL OUT_OF_SERVICE;
	REAL RELINQUISH_DEFAULT;
	REAL MIN_PRESENT_VALUE;
	REAL MAX_PRESENT_VALUE;
	REAL RESOLUTION;
	INT UNITS;
	REAL COV_INCREMENT;
	char DESCRIPTION[256];
	char DEVICE_TYPE[65];
	BOOL READONLY;
	BOOL EVENT_DETECTION_ENABLE;
	DWORD NOTIFICATION_CLASS;
	BACNETEVENTTRANSITIONBITStyp EVENT_ENABLE;
	INT NOTIFY_TYPE;
	INT I_PADDING_1;
	REAL PRESENT_VALUE;
	REAL INTERFACE_VALUE;
	DWORD REMAININGTIMEDELAY;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	BYTE CURRENTCOMMANDPRIORITY;
	BYTE I_PADDING_2;
	INT ACTUAL_RELIABILITY;
}
BACNET_ANALOG_VALUEtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	BOOL PRIORITY_ARRAY_VAL[16];
	BOOL PRIORITY_ARRAY_EN[16];
	DWORD CHANGE_OF_STATE_COUNT;
	INT RELIABILITY;
	INT EVENT_STATE;
	BACNETDATETIMEtyp CHANGE_OF_STATE_TIME;
	BACNETDATETIMEtyp TIME_OF_STATE_COUNT_RESET;
	BACNETDATETIMEtyp TIME_OF_ACTIVE_TIME_RESET;
	BACNETACKEDINFOtyp ACKED_TRANSITIONS[3];
	BACNETDATETIMEtyp EVENT_TIME_STAMPS[3];
	DWORD TIME_DELAY;
	BOOL OUT_OF_SERVICE;
	BOOL RELINQUISH_DEFAULT;
	BOOL READONLY;
	BOOL ALARM_VALUE;
	BOOL EVENT_DETECTION_ENABLE;
	INT NOTIFY_TYPE;
	INT POLARITY;
	char DESCRIPTION[256];
	char DEVICE_TYPE[65];
	char INACTIVE_TEXT[33];
	char ACTIVE_TEXT[33];
	DWORD MINIMUM_OFF_TIME;
	DWORD MINIMUM_ON_TIME;
	DWORD NOTIFICATION_CLASS;
	BACNETEVENTTRANSITIONBITStyp EVENT_ENABLE;
	BOOL PRESENT_VALUE;
	BOOL INTERFACE_VALUE;
	BOOL FEEDBACK_VALUE;
	BOOL ENABLE_FEEDBACK_VALUE_FROM_PLC;
	DWORD ELAPSED_ACTIVE_TIME;
	DWORD ELAPSED_INACTIVE_TIME;
	DWORD REMAININGTIMEDELAY;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	BYTE CURRENTCOMMANDPRIORITY;
	BYTE I_PADDING_4;
	INT ACTUAL_RELIABILITY;
}
BACNET_BINARY_VALUEtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	char DESCRIPTION[256];
	BOOL PRESENT_VALUE;
}
BACNET_CALENDARtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	char PRESENT_VALUE[256];
	INT RELIABILITY;
	INT EVENT_STATE;
	BOOL OUT_OF_SERVICE;
	BOOL I_PADDING_1;
	BOOL I_PADDING_2;
	BOOL I_PADDING_3;
	char DESCRIPTION[256];
	BOOL READONLY;
	BOOL I_PADDING_4;
	BOOL I_PADDING_5;
	BOOL I_PADDING_6;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	INT ACTUAL_RELIABILITY;
	INT I_PADDING_7;
}
BACNET_CHARSTRING_VALUEtyp;

typedef struct
{
	INT OBJECT_TYPE;
	INT I_PADDING;
	DWORD INSTNR;
}
BACNETOBJECTIDtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	DWORD DATABASE_REVISION;
	BACNETDATETIMEtyp LAST_RESTORE_TIME;
	BACNETDATETIMEtyp TIME_OF_DEVICE_RESTART;
	INT LAST_RESTART_REASON;
	char DESCRIPTION[256];
	char LOCATION[64];
	WORD APDU_TIMEOUT;
	WORD NUMBER_OF_APDU_RETRIES;
	DINT UTC_OFFSET;
	BACNETTIMEtyp LOCAL_TIME;
	BACNETDATEtyp LOCAL_DATE;
	BOOL DAYLIGHT_SAVINGS_STATUS;
	BOOL _PAD1;
	BOOL _PAD2;
	BOOL _PAD3;
	INT SYSTEM_STATUS;
	WORD VENDOR_IDENTIFIER;
	char VENDOR_NAME[32];
	char MODEL_NAME[32];
	char FIRMWARE_REVISION[32];
	char SERIAL_NUMBER[128];
	char APPLICATION_SOFTWARE_VERSION[32];
	INT BACKUP_AND_RESTORE_STATE;
	DWORD CONFIGURATION_FILES_COUNT;
	BACNETOBJECTIDtyp CONFIGURATION_FILES[20];
	WORD BACKUP_FAILURE_TIMEOUT;
	WORD BACKUP_PREPARATION_TIME;
	WORD RESTORE_PREPARATION_TIME;
	WORD RESTORE_COMPLETION_TIME;
}
BACNET_DEVICE_OBJECTtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	BOOL ARCHIVE;
	BOOL _PAD1;
	BOOL _PAD2;
	BOOL _PAD3;
	char DESCRIPTION[256];
	char FILE_TYPE[32];
	BOOL FILE_IS_READ_ONLY;
	BOOL _PAD4;
	BOOL _PAD5;
	BOOL _PAD6;
	DWORD LAST_BACNET_ACCESS_TIME;
	char FILEPATH[192];
	char FILENAME[192];
}
BACNET_FILE_OBJECTtyp;

typedef struct
{
	BACNETOBJECTIDtyp OBJECTIDENTIFIER;
	INT PROPERTYIDENTIFIER;
	DWORD ARRAYINDEX;
	BACNETOBJECTIDtyp DEVICEIDENTIFIER;
}
BACNETDEVICEOBJPROPERTYREFtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	REAL PRESENT_VALUE;
	REAL CONTROLLED_VARIABLE_VALUE;
	REAL SETPOINT;
	INT RELIABILITY;
	INT EVENT_STATE;
	BACNETACKEDINFOtyp ACKED_TRANSITIONS[3];
	BACNETDATETIMEtyp EVENT_TIME_STAMPS[3];
	REAL ERROR_LIMIT;
	REAL BIAS;
	REAL DEADBAND;
	DWORD TIME_DELAY;
	REAL PROPORTIONAL_CONSTANT;
	REAL INTEGRAL_CONSTANT;
	REAL DERIVATIVE_CONSTANT;
	REAL MAXIMUM_OUTPUT;
	REAL MINIMUM_OUTPUT;
	INT LOOPACTION;
	BOOL OUT_OF_SERVICE;
	DWORD PRIORITY_FOR_WRITING;
	DWORD UPDATE_INTERVAL;
	BACNETDEVICEOBJPROPERTYREFtyp SETPOINT_REFERENCE;
	BACNETDEVICEOBJPROPERTYREFtyp MANIPULATE_VARIABLE_REFERENCE;
	BACNETDEVICEOBJPROPERTYREFtyp CONTROLLED_VARIABLE_REFERENCE;
	INT OUTPUT_UNITS;
	INT CONTROLLED_VARIABLE_UNITS;
	INT PROPORTIONAL_CONSTANT_UNITS;
	INT INTEGRAL_CONSTANT_UNITS;
	INT DERIVATIVE_CONSTANT_UNITS;
	REAL COV_INCREMENT;
	char DESCRIPTION[256];
	BOOL READONLY;
	BOOL EVENT_DETECTION_ENABLE;
	DWORD NOTIFICATION_CLASS;
	BACNETEVENTTRANSITIONBITStyp EVENT_ENABLE;
	INT NOTIFY_TYPE;
	INT I_PADDING_1;
	DWORD REMAININGTIMEDELAY;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	INT ACTUAL_RELIABILITY;
	INT I_PADDING_2;
	BOOL CUSTOM_ALGORITHM_ENABLE;
	BOOL I_PADDING_3;
	INT I_PADDING_4;
	REAL LOOP_ALGORITHM_OUTPUT;
	BOOL SETPOINT_REFERENCE_CONNECTED;
	BOOL I_PADDING_6;
	BOOL CONTROLLED_VARIABLE_REFERENCE_CONNECTED;
	BOOL I_PADDING_5;
}
BACNET_LOOPtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	DWORD PRIORITY_ARRAY_VAL[16];
	BOOL PRIORITY_ARRAY_EN[16];
	DWORD FEEDBACK_VALUE;
	INT RELIABILITY;
	INT EVENT_STATE;
	BACNETACKEDINFOtyp ACKED_TRANSITIONS[3];
	BACNETDATETIMEtyp EVENT_TIME_STAMPS[3];
	DWORD TIME_DELAY;
	BOOL OUT_OF_SERVICE;
	DWORD RELINQUISH_DEFAULT;
	char ALARM_VALUES[96];
	char FAULT_VALUES[96];
	char STATE_TEXTS[256];
	char DESCRIPTION[256];
	char DEVICE_TYPE[65];
	BOOL READONLY;
	BOOL EVENT_DETECTION_ENABLE;
	DWORD NOTIFICATION_CLASS;
	BACNETEVENTTRANSITIONBITStyp EVENT_ENABLE;
	INT NOTIFY_TYPE;
	INT I_PADDING_1;
	DWORD PRESENT_VALUE;
	DWORD INTERFACE_VALUE;
	DWORD CURRENT_NUMBER_OF_STATES;
	DWORD REMAININGTIMEDELAY;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	INT ACTUAL_RELIABILITY;
	BYTE CURRENTCOMMANDPRIORITY;
	BOOL ENABLE_FEEDBACK_VALUE_FROM_PLC;
}
BACNET_MULTISTATE_VALUEtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	BYTE PRIORITY[3];
	BYTE I_PADDING_1;
	BACNETEVENTTRANSITIONBITStyp ACK_REQUIRED;
	char DESCRIPTION[256];
	DWORD NOTIFICATION_CLASS;
	DWORD I_PADDING_2;
}
BACNET_NOTIFICATION_CLASStyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	BOOL OUT_OF_SERVICE;
	BYTE I_PADDING1;
	BYTE I_PADDING2;
	BYTE I_PADDING3;
	BACNETDATEtyp STARTDATE;
	BACNETDATEtyp ENDDATE;
	char DESCRIPTION[256];
	BYTE PRIORITY_FOR_WRITING;
	INT RELIABILITY;
	BOOL ISWITHINEFFECTIVEPERIOD;
	BYTE I_PADDING4;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
}
BACNET_SCHEDULEtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	DWORD TIMESTATS_PROCESS_TOTAL;
	DWORD TIMESTATS_PROCESS_TOTALAVG;
	DWORD TIMESTATS_PROCESS_TOTALMIN;
	DWORD TIMESTATS_PROCESS_TOTALMAX;
	INT CYCLES_PERSECOND;
	INT RESERVED2;
	DWORD MEMORY_TOTALMALLOC;
	DWORD PACKETSRECEIVED_TOTAL;
	REAL PACKETSRECEIVED_PERSECOND;
	DWORD PACKETSSENT_TOTAL;
	DWORD PACKETSSENT_FAILED;
	REAL PACKETSSENT_PERSECOND;
	WORD TAGCOUNT;
	WORD TAGCOUNT_ANALOGINPUT;
	WORD TAGCOUNT_ANALOGOUTPUT;
	WORD TAGCOUNT_ANALOGVALUE;
	WORD TAGCOUNT_BINARYINPUT;
	WORD TAGCOUNT_BINARYOUTPUT;
	WORD TAGCOUNT_BINARYVALUE;
	WORD TAGCOUNT_MULTISTATEINPUT;
	WORD TAGCOUNT_MULTISTATEOUTPUT;
	WORD TAGCOUNT_MULTISTATEVALUE;
	WORD TAGCOUNT_LOOP;
	WORD TAGCOUNT_SCHEDULER;
	WORD TAGCOUNT_STRUCTVIEW;
	WORD TAGCOUNT_TRENDLOG;
	WORD COV_SUBSCRIPTIONCOUNT;
	WORD COV_SUBSCRIPTIONUPDATES;
	DWORD BACKGROUNDWORKER_PLCTHREAD_COUNT;
	DINT BACKGROUNDWORKER_PLCTHREAD_POLICY;
	DINT BACKGROUNDWORKER_PLCTHREAD_PRIORITY;
	DWORD BACKGROUNDWORKER_BACKGROUNDTHREAD_COUNT;
	DINT BACKGROUNDWORKER_BACKGROUNDTHREAD_POLICY;
	DINT BACKGROUNDWORKER_BACKGROUNDTHREAD_PRIORITY;
	WORD BACKGROUNDWORKER_PENDINGTASKCOUNT;
	WORD BACKGROUNDWORKER_PENDINGCOMPLETIONCOUNT;
	WORD BACKGROUNDWORKER_TASKCAPACITY;
	BOOL PERSISTENCE_RETAINBUFFER_EXPORTTOFILEINPROGRESS;
	BOOL PERSISTENCE_RETAINBUFFER_LOADING;
	BOOL PERSISTENCE_RETAINBUFFER_LOADED;
	BOOL PERSISTENCE_RETAINBUFFER_ISFULL;
	BYTE *PERSISTENCE_RETAINBUFFER_POINTER;
	DWORD PERSISTENCE_RETAINBUFFER_SIZE;
	DWORD PERSISTENCE_RETAINBUFFER_USEDSIZE;
	REAL PERSISTENCE_RETAINBUFFER_USEDPERCENT;
	DWORD PERSISTENCE_RETAINBUFFER_USEDCOUNT;
	DWORD PERSISTENCE_RETAINBUFFER_OBJECTUPDATESUCCESSCOUNT;
	DWORD PERSISTENCE_RETAINBUFFER_OBJECTUPDATEFAILEDCOUNT;
	DWORD PERSISTENCE_RETAINBUFFER_COMPRESSSUCCESSCOUNT;
	DWORD PERSISTENCE_RETAINBUFFER_COMPRESSFAILEDCOUNT;
	DWORD PERSISTENCE_SD_LOADFILESUCCESSOPERATIONS;
	DWORD PERSISTENCE_SD_LOADFILENOTFOUNDOPERATIONS;
	DWORD PERSISTENCE_SD_SAVEFILESUCCESSOPERATIONS;
	DWORD PERSISTENCE_SD_SAVEFILEFAILEDOPERATIONS;
	DWORD RESERVED[50];
}
BACNET_STATUS_INFO_OBJECTtyp;

typedef struct
{
	BOOL OPERATIONAL;
	INT OBJECT_TYPE;
	DWORD INSTNR;
	char OBJECT_NAME[128];
	char NAME[48];
	DWORD PARENTOBJECTINSTNR;
	BACNET_INTERNAL_DATAtyp I_PRIVATE;
	BOOL PERSIST;
	BOOL PERSISTLOADED;
	BOOL PERSISTPENDING;
	BYTE PERSISTSAVED;
	DWORD PERSISTSETTINGS;
	INT RELIABILITY;
	INT EVENT_STATE;
	BACNETACKEDINFOtyp ACKED_TRANSITIONS[3];
	BACNETDATETIMEtyp EVENT_TIME_STAMPS[3];
	BOOL ENABLE;
	BOOL I_PAD4;
	BOOL I_PAD5;
	BOOL I_PAD6;
	BACNETDATETIMEtyp STARTTIME;
	BACNETDATETIMEtyp STOPTIME;
	char DESCRIPTION[256];
	DWORD NOTIFICATION_CLASS;
	DWORD NOTIFICATION_THRESHOLD;
	BACNETEVENTTRANSITIONBITStyp EVENT_ENABLE;
	INT NOTIFY_TYPE;
	BOOL EVENT_DETECTION_ENABLE;
	DWORD LOGINTERVAL;
	DWORD INTERVALOFFSET;
	BACNETDEVICEOBJPROPERTYREFtyp SOURCE;
	INT LOGGINGTYPE;
	BOOL STOPWHENFULL;
	BOOL ALIGNINTERVALS;
	DWORD RECORDCOUNT;
	DWORD TOTALRECORDCOUNT;
	DWORD LASTDATATIME;
	DWORD I_PAD10;
	DWORD LAST_NOTIFY_RECORD;
	BACNETSTATUSFLAGStyp STATUS_FLAGS;
	BOOL TRIGGER;
	BOOL ISREADY;
	BOOL BUSYWRITING;
	BOOL BUSYLOADING;
	BYTE CURRENTARCHIVENUMBER;
	BOOL I_PAD7;
	BOOL I_PAD8;
	BOOL I_PAD9;
}
BACNET_TRENDLOGtyp;

typedef struct
{
	BYTE MAC_LEN;
	BYTE MAC[7];
	WORD NET;
	BYTE LEN;
	BYTE ADDRESS[7];
	BYTE I_PADDING1;
	BYTE I_PADDING2;
}
BACNETDEVICEADDRESStyp;

typedef struct
{
	BYTE MONTH;
	BYTE WEEKOFMONTH;
	BYTE DAYOFWEEK;
	BYTE I_PADDING;
}
BACNETWEEKNDAYtyp;


#ifdef __ERROR
#define ERROR __ERROR
#undef __ERROR
#endif

